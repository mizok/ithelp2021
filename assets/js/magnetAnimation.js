/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/class.js":
/*!*************************!*\
  !*** ./src/js/class.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Vector2D\": () => (/* binding */ Vector2D),\n/* harmony export */   \"Point2D\": () => (/* binding */ Point2D)\n/* harmony export */ });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar Vector2D = /*#__PURE__*/function () {\n  function Vector2D(x, y) {\n    _classCallCheck(this, Vector2D);\n\n    this.x = x;\n    this.y = y;\n  }\n\n  _createClass(Vector2D, [{\n    key: \"lengthSquared\",\n    value: function lengthSquared() {\n      return this.x * this.x + this.y * this.y;\n    }\n    /**\n     * 求純量值\n     *\n     * @returns\n     * @memberof Vector2D\n     */\n\n  }, {\n    key: \"length\",\n    value: function length() {\n      return Math.sqrt(this.lengthSquared());\n    }\n    /**\n     * 複製該向量\n     *\n     * @returns\n     * @memberof Vector2D\n     */\n\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new Vector2D(this.x, this.y);\n    }\n    /**\n     *倒轉該向量\n     *\n     * @memberof Vector2D\n     */\n\n  }, {\n    key: \"negate\",\n    value: function negate() {\n      this.x = -this.x;\n      this.y = -this.y;\n    }\n    /**\n     * 把該向量轉變成單位向量\n     *\n     * @returns\n     * @memberof Vector2D\n     */\n\n  }, {\n    key: \"normalize\",\n    value: function normalize() {\n      var length = this.length();\n\n      if (length > 0) {\n        this.x /= length;\n        this.y /= length;\n      }\n\n      return this.length();\n    }\n    /**\n     * 回傳與某向量的向量和\n     *\n     * @param {*} vec\n     * @returns\n     * @memberof Vector2D\n     */\n\n  }, {\n    key: \"add\",\n    value: function add(vec) {\n      return new Vector2D(this.x + vec.x, this.y + vec.y);\n    }\n    /**\n     * 加上某向量\n     *\n     * @param {*} vec\n     * @memberof Vector2D\n     */\n\n  }, {\n    key: \"incrementBy\",\n    value: function incrementBy(vec) {\n      this.x += vec.x;\n      this.y += vec.y;\n    }\n    /**\n     * \n     * 回傳與某向量的向量差\n     * @param {*} vec\n     * @returns\n     * @memberof Vector2D\n     */\n\n  }, {\n    key: \"subtract\",\n    value: function subtract(vec) {\n      return new Vector2D(this.x - vec.x, this.y - vec.y);\n    }\n    /**\n     * 扣除某向量\n     *\n     * @param {*} vec\n     * @memberof Vector2D\n     */\n\n  }, {\n    key: \"decrementBy\",\n    value: function decrementBy(vec) {\n      this.x -= vec.x;\n      this.y -= vec.y;\n    }\n    /**\n       * 回傳擴增k倍後的向量\n       *\n       * @param {*} k\n       * @memberof Vector2D\n       */\n\n  }, {\n    key: \"multiply\",\n    value: function multiply(k) {\n      return new Vector2D(k * this.x, k * this.y);\n    }\n    /**\n     * 擴增該向量\n     *\n     * @param {*} k\n     * @memberof Vector2D\n     */\n\n  }, {\n    key: \"scaleBy\",\n    value: function scaleBy(k) {\n      this.x *= k;\n      this.y *= k;\n    }\n    /**\n     * 求取該向量與其他向量的內積\n     *\n     * @param {*} vec\n     * @returns\n     * @memberof Vector2D\n     */\n\n  }, {\n    key: \"dotProduct\",\n    value: function dotProduct(vec) {\n      return this.x * vec.x + this.y * vec.y;\n    }\n    /**\n     * 求取此向量映射在某向量上的長度\n     *\n     * @param {*} vec\n     * @returns\n     * @memberof Vector2D\n     */\n\n  }, {\n    key: \"projection\",\n    value: function projection(vec) {\n      var length = this.length();\n      var lengthVec = vec.length();\n      var proj;\n\n      if (length == 0 || lengthVec == 0) {\n        proj = 0;\n      } else {\n        proj = (this.x * vec.x + this.y * vec.y) / lengthVec;\n      }\n\n      return proj;\n    }\n    /**\n     * 回傳一個新向量，新向量的方向會跟作為參數向量相同，但是量值上是作為此向量投射在參數向量上的長度\n     *\n     * @param {*} vec\n     * @returns\n     * @memberof Vector2D\n     */\n\n  }, {\n    key: \"project\",\n    value: function project(vec) {\n      return vec.para(this.projection(vec));\n    }\n    /**\n       * 根據傳入的u值來回傳一個u倍(或-u倍)的單位向量\n       *\n       * @param {*} vec\n       * @returns\n       * @memberof Vector2D\n       */\n\n  }, {\n    key: \"para\",\n    value: function para(u) {\n      var positive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var length = this.length();\n      var vec = new Vector2D(this.x, this.y);\n\n      if (positive) {\n        vec.scaleBy(u / length);\n      } else {\n        vec.scaleBy(-u / length);\n      }\n\n      return vec;\n    }\n    /**\n     * 回傳垂直與此向量的u倍單位向量\n     *\n     * @param {*} vec\n     * @returns\n     * @memberof Vector2D\n     */\n\n  }, {\n    key: \"perp\",\n    value: function perp(u) {\n      var anticlockwise = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      if (typeof anticlockwise === 'undefined') anticlockwise = true;\n      var length = this.length();\n      var vec = new Vector2D(this.y, -this.x);\n\n      if (length > 0) {\n        if (anticlockwise) {\n          vec.scaleBy(u / length);\n        } else {\n          vec.scaleBy(-u / length);\n        }\n      } else {\n        vec = new Vector2D(0, 0);\n      }\n\n      return vec;\n    }\n  }, {\n    key: \"addScaled\",\n    value: function addScaled(vec, k) {\n      return new Vector2D(this.x + k * vec.x, this.y + k * vec.y);\n    }\n    /**\n     * 求取該向量與其他向量的夾角\n     *\n     * @param {*} vec\n     * @returns\n     * @memberof Vector2D\n     */\n\n  }]);\n\n  return Vector2D;\n}();\n\n_defineProperty(Vector2D, \"angleBetween\", function (vec1, vec2) {\n  return Math.acos(vec1.dotProduct(vec2) / (vec1.length() * vec2.length()));\n});\n\nvar Point2D = function Point2D(x, y) {\n  _classCallCheck(this, Point2D);\n\n  this.x = x;\n  this.y = y;\n};\n\n//# sourceURL=webpack://webpack_playground/./src/js/class.js?");

/***/ }),

/***/ "./src/js/magnet-animation/index.js":
/*!******************************************!*\
  !*** ./src/js/magnet-animation/index.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _class__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../class */ \"./src/js/class.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\nvar CANVAS = {\n  width: 800,\n  height: 600,\n  background: 'gray'\n};\nvar BALLS = [{\n  x: 300,\n  y: 300,\n  radius: 25,\n  mass: 50\n}, {\n  x: 380,\n  y: 380,\n  radius: 25,\n  mass: 50\n}, {\n  x: 375,\n  y: 330,\n  radius: 25,\n  mass: 50\n}, {\n  x: 200,\n  y: 200,\n  radius: 55,\n  mass: 100\n}, {\n  x: 250,\n  y: 250,\n  radius: 15,\n  mass: 50\n}, {\n  x: 450,\n  y: 450,\n  radius: 10,\n  mass: 10\n}, {\n  x: 600,\n  y: 600,\n  radius: 75,\n  mass: 50\n}];\n\nvar getDist = function getDist(x0, y0, x1, y1) {\n  return Math.sqrt((x1 - x0) * (x1 - x0) + (y1 - y0) * (y1 - y0));\n};\n\nvar MAGNET_SIZE = 500;\nvar MAGNET_FORCE_CONST = 7000;\n\nvar Circle = /*#__PURE__*/function () {\n  function Circle(x, y, radius) {\n    var fillColor = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'transparent';\n    var strokeColor = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'black';\n    var lineWidth = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 1;\n\n    _classCallCheck(this, Circle);\n\n    this.x = x;\n    this.y = y;\n    this.fillColor = fillColor;\n    this.strokeColor = strokeColor;\n    this.lineWidth = lineWidth;\n    this.radius = radius;\n  }\n\n  _createClass(Circle, [{\n    key: \"draw\",\n    value: function draw(ctx) {\n      ctx.save();\n      ctx.fillStyle = this.fillColor;\n      ctx.strokeStyle = this.strokeColor;\n      ctx.lineWidth = this.lineWidth;\n      ctx.beginPath();\n      ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, true);\n      ctx.closePath();\n      ctx.fill();\n      ctx.stroke();\n      ctx.restore();\n    }\n  }]);\n\n  return Circle;\n}();\n\nvar Ball = /*#__PURE__*/function (_Circle) {\n  _inherits(Ball, _Circle);\n\n  var _super = _createSuper(Ball);\n\n  function Ball(x, y, radius, mass) {\n    var _this;\n\n    var fillColor = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'rgba(0,0,0,0.25)';\n    var strokeColor = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 'transparent';\n\n    _classCallCheck(this, Ball);\n\n    _this = _super.call(this, x, y, radius, fillColor, strokeColor);\n    _this.friction = 0.995;\n    _this.force = new _class__WEBPACK_IMPORTED_MODULE_0__.Vector2D(0, 0);\n    _this.acc = new _class__WEBPACK_IMPORTED_MODULE_0__.Vector2D(0, 0);\n    _this.velocity = new _class__WEBPACK_IMPORTED_MODULE_0__.Vector2D(0, 0);\n    _this.mass = mass;\n    return _this;\n  }\n\n  _createClass(Ball, [{\n    key: \"refreshLocation\",\n    value: function refreshLocation(dt) {\n      this.x += this.velocity.x * dt;\n      this.y += this.velocity.y * dt;\n    }\n  }, {\n    key: \"refreshSpeed\",\n    value: function refreshSpeed(dt) {\n      this.velocity.scaleBy(this.friction);\n      this.velocity.incrementBy(this.acc.multiply(dt));\n    }\n  }]);\n\n  return Ball;\n}(Circle);\n\nvar MagnetAnimation = /*#__PURE__*/function () {\n  function MagnetAnimation(ctx) {\n    _classCallCheck(this, MagnetAnimation);\n\n    this.ctx = ctx;\n    this.cvs = ctx.canvas;\n    this.frameIsPaused = false;\n    this.balls = [];\n    this.mouse = {\n      x: 0,\n      y: 0\n    };\n    this.magnet = null;\n    this.init();\n  }\n\n  _createClass(MagnetAnimation, [{\n    key: \"init\",\n    value: function init() {\n      this.time = performance.now();\n      this.setCanvasSize();\n      this.initEvents();\n      this.initBalls();\n      this.animate();\n    }\n  }, {\n    key: \"initBalls\",\n    value: function initBalls() {\n      var _this2 = this;\n\n      BALLS.forEach(function (o, i) {\n        var ball = new Ball(o.x, o.y, o.radius, o.mass);\n\n        _this2.balls.push(ball);\n      });\n    }\n  }, {\n    key: \"initEvents\",\n    value: function initEvents() {\n      this.initVisibilityChangeEvent();\n      this.initMouseEvent();\n    }\n  }, {\n    key: \"initVisibilityChangeEvent\",\n    value: function initVisibilityChangeEvent() {\n      var _this3 = this;\n\n      window.addEventListener('visibilitychange', function () {\n        if (document.visibilityState !== \"visible\") {\n          _this3.frameIsPaused = true;\n        } else {\n          _this3.frameIsPaused = false;\n          _this3.time = performance.now();\n        }\n      });\n    }\n  }, {\n    key: \"initMouseEvent\",\n    value: function initMouseEvent() {\n      var _this4 = this;\n\n      this.cvs.addEventListener('mousedown', function () {\n        _this4.isClicked = true;\n      });\n      this.cvs.addEventListener('mousemove', function (e) {\n        if (!_this4.isClicked) return;\n\n        var rect = _this4.cvs.getBoundingClientRect();\n\n        _this4.mouse.x = e.clientX - rect.left;\n        _this4.mouse.y = e.clientY - rect.top;\n      });\n      this.cvs.addEventListener('mouseup', function () {\n        console.log(_this4.balls);\n        _this4.isClicked = false;\n      });\n      this.cvs.addEventListener('mouseleave', function () {\n        _this4.isClicked = false;\n      });\n    }\n  }, {\n    key: \"drawAll\",\n    value: function drawAll() {\n      this.drawMagnet();\n      this.drawBalls();\n    }\n  }, {\n    key: \"drawMagnet\",\n    value: function drawMagnet() {\n      new Circle(this.mouse.x, this.mouse.y, MAGNET_SIZE / 2).draw(this.ctx);\n    }\n  }, {\n    key: \"drawBalls\",\n    value: function drawBalls() {\n      var _this5 = this;\n\n      this.balls.forEach(function (o, i) {\n        o.draw(_this5.ctx);\n      });\n    }\n  }, {\n    key: \"animate\",\n    value: function animate() {\n      if (this.frameIsPaused) {\n        this.animate();\n      }\n\n      var $this = this;\n      var frameDelay = 10; // frameDelay 是用來做動畫抽幀的常數，可以想像成會讓動畫加速！\n\n      var dt = (performance.now() - this.time) * frameDelay / 1000;\n      this.ctx.clearRect(0, 0, this.cvs.width, this.cvs.height);\n      this.drawAll();\n      this.refreshBallsLocation(dt);\n      this.refreshBallsSpeed(dt);\n      this.refreshBallsAcc();\n      this.time = performance.now();\n      requestAnimationFrame(this.animate.bind($this));\n    }\n  }, {\n    key: \"refreshBallsLocation\",\n    value: function refreshBallsLocation(dt) {\n      this.balls.forEach(function (o, i) {\n        o.refreshLocation(dt);\n      });\n    }\n  }, {\n    key: \"refreshBallsSpeed\",\n    value: function refreshBallsSpeed(dt) {\n      this.balls.forEach(function (o, i) {\n        o.refreshSpeed(dt);\n      });\n    }\n  }, {\n    key: \"refreshBallsAcc\",\n    value: function refreshBallsAcc() {\n      var _this6 = this;\n\n      this.balls.forEach(function (o, i) {\n        var distToMouse = getDist(_this6.mouse.x, _this6.mouse.y, o.x, o.y);\n\n        if (distToMouse < MAGNET_SIZE / 2 + o.radius && distToMouse > 1e-2) {\n          o.force = new _class__WEBPACK_IMPORTED_MODULE_0__.Vector2D(_this6.mouse.x - o.x, _this6.mouse.y - o.y).para(MAGNET_FORCE_CONST / distToMouse);\n          o.acc = o.force.multiply(1 / o.mass);\n        } else {\n          o.force = new _class__WEBPACK_IMPORTED_MODULE_0__.Vector2D(0, 0);\n          o.acc = new _class__WEBPACK_IMPORTED_MODULE_0__.Vector2D(0, 0);\n        }\n      });\n    }\n  }, {\n    key: \"setCanvasSize\",\n    value: function setCanvasSize() {\n      this.cvs.width = CANVAS.width;\n      this.cvs.height = CANVAS.height;\n      this.cvs.style.backgroundColor = CANVAS.background;\n    }\n  }]);\n\n  return MagnetAnimation;\n}();\n\n(function () {\n  var ctx = document.querySelector('canvas').getContext('2d');\n  var instance = new MagnetAnimation(ctx);\n})();\n\n//# sourceURL=webpack://webpack_playground/./src/js/magnet-animation/index.js?");

/***/ }),

/***/ "./src/scss/main.scss":
/*!****************************!*\
  !*** ./src/scss/main.scss ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://webpack_playground/./src/scss/main.scss?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	__webpack_require__("./src/js/magnet-animation/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/scss/main.scss");
/******/ 	
/******/ })()
;